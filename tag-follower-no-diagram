;;; New program created by CaroHernandez on 8 September 2016(var tag := [robot tagDetected: ARDConstant detectedTag_SH_IN_CH ])(var offsetfilter := [[:val :min :max | ((val abs) < min) 		ifTrue: 0		ifFalse: [			((val abs) > max) 			ifTrue: ((max - min) * (val sign))			ifFalse: ((val abs - min) * (val sign)) .			]		]])(var xTolerance := [0.2])(var yTolerance := [0.2]) (var zTolerance := [0.2])(var zDistance := [200])(var speed := [0.05])(var tagcentered := [[(tag isCenteredInXWithTolerance: xTolerance) &		(tag isCenteredInYWithTolerance: yTolerance) &		(tag isAtDistance: zDistance tolerance: zTolerance)]])(machine a(state b(machine tagFollower	(state waiting)	(state following		(machine followAlgo			(state positioned)			(state moving				(running [ Transcript show:  (offsetfilter value:(tag offsetInDistance: zDistance) value:zTolerance value: 1) asString;cr.					robot 					moveByLeftRightTilt: (speed * (offsetfilter value:(tag offsetInX) value: xTolerance value: 1)) 					 frontBackTilt: (-1 *  speed * (offsetfilter value:(tag offsetInDistance: zDistance) value:zTolerance value: 1))					 angularSpeed: 0					 verticalSpeed: (-2 *  speed * (offsetfilter value:(tag offsetInY) value:yTolerance value:1))])				(onexit [robot stabilize])			)			(on [tagcentered value] moving -> positioned tin)			(on [tagcentered value not] positioned -> moving tout)					)		(onentry (spawn followAlgo positioned)))	(event tagFound [tag detected])	(event tagLost [tag detected not])	(on tagFound waiting -> following tfound)	(on tagLost following -> waiting tlost))(onentry (spawn tagFollower waiting))))(spawn a b)